<PROGRAM> ::= (<FLUENT_DECL> | <DEFINITION>)+

<FLUENT_DECL> ::= (<STATE_FLUENT_DECL> | <ACTION_FLUENT_DECL>) <TERMINATOR>
<DEFINITION>  ::= (<TRANSITION_DEF> | <REWARD_DEF>) <TERMINATOR>

<STATE_FLUENT_DECL>  ::= <STATE_TYPE> <LPARENS> <STATE_PREDICATE> <RPARENS>
                       | <STATE_TYPE> <LPARENS> <STATE_PREDICATE> <RPARENS> <RULE_SEPARATOR> <INTENTIONAL_BODY>

<ACTION_FLUENT_DECL> ::= <ACTION_TYPE> <LPARENS> <ACTION_PREDICATE> <RPARENS>
                       | <ACTION_TYPE> <LPARENS> <ACTION_PREDICATE> <RPARENS> <RULE_SEPARATOR> <INTENTIONAL_BODY>

<TRANSITION_DEF>  ::= <PROBABILISTIC_FACT> | <TRANSITION_RULE>
<TRANSITION_RULE> ::= <TRANSITION_HEAD> <RULE_SEPARATOR> <BODY>
<TRANSITION_HEAD> ::= <NEXT_STATE_PREDICATE> | <PROBABILITY>::<NEXT_STATE_PREDICATE>

<REWARD_DEF>  ::= <PROBABILISTIC_FACT> | <TRANSITION_RULE> | <UTILITY_ATTRIBUTE>
<REWARD_RULE> ::= <REWARD_HEAD> <RULE_SEPARATOR> <BODY>
<REWARD_HEAD> ::= <TEMPORAL_PREDICATE> | <PROBABILITY>::<TEMPORAL_PREDICATE>

<PROBABILISTIC_FACT> ::= <PROBABILITY>::<AUXILIARY_PREDICATE>
                       | <PROBABILITY>::<AUXILIARY_PREDICATE> <RULE_SEPARATOR> <INTENTIONAL_BODY>

<UTILITY_ATTRIBUTE> ::= <UTILITY_TYPE> <LPARENS> <UTILITY_PREDICATE> <SEPARATOR> <REAL_VALUE> <RPARENS>
                      | <UTILITY_TYPE> <LPARENS> <UTILITY_PREDICATE> <SEPARATOR> <REAL_VALUE> <RPARENS> <RULE_SEPARATOR> <INTENTIONAL_BODY>

<BODY> ::= <LITERAL> (<SEPARATOR> <LITERAL>)*

<INTENTIONAL_BODY> ::= <AUXILIARY_LITERAL> (<SEPARATOR> <AUXILIARY_LITERAL>)*

<LITERAL> ::= <ATOM> | <NEGATION> <LPARENS> <ATOM> <RPARENS>

<AUXILIARY_LITERAL> ::= <AUXILIARY_PREDICATE> | <NEGATION> <LPARENS> <AUXILIARY_PREDICATE> <RPARENS>

<ATOM> ::= <TEMPORAL_PREDICATE> | <ACTION_PREDICATE> | <AUXILIARY_PREDICATE>

<TEMPORAL_PREDICATE> ::= <CURRENT_STATE_PREDICATE> | <NEXT_STATE_PREDICATE>

<UTILITY_PREDICATE> ::= <TEMPORAL_PREDICATE> | <ACTION_PREDICATE>

<STATE_TYPE>   ::= "state_fluent"
<ACTION_TYPE>  ::= "action"
<UTILITY_TYPE> ::= "utility"

<NEGATION> ::= "not"

<LPARENS> ::= "("
<RPARENS> ::= ")"
<RULE_SEPARATOR> ::= ":-"
<SEPARATOR> ::= ","
<TERMINATOR> ::= "."
